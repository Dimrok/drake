#!/usr/bin/env python3

'''Check HTTPDownload.'''

import drake

from utils import *

content = b'HTTPDownload test payload'

import http.server
import socketserver

beacons = set()

class Handler(http.server.BaseHTTPRequestHandler):

  def _set_headers(self):
    self.send_response(200)
    if 'binary' in self.requestline:
      beacons.add('binary')
      self.send_header('Content-type', 'application/octet-stream')
    elif 'html' in self.requestline:
      beacons.add('html')
      self.send_header('Content-type', 'text/html')
    else:
      self.send_header('Content-type', 'text/plain')
    self.end_headers()

  def do_GET(self):
    path = self.requestline.split(' ')[1]
    self._set_headers()
    self.wfile.write(content)
    self.wfile.write(b'\n')
    self.wfile.write(path.encode('latin-1'))

httpd = socketserver.TCPServer(("", 0), Handler)

import threading
class HTTPThread(threading.Thread):

  def run(self):
    httpd.serve_forever()

HTTPThread(daemon = True).start()

with Drake() as d:
  def download(path = 'some/path', fail = False, *args, **kwargs):
    url = 'http://localhost:{}/{}'.format(
      httpd.server_address[1], path)
    f = drake.download(url, *args, **kwargs)
    try:
      f.build()
    except:
      if not fail:
        raise
    else:
      with open(str(f.path()), 'rb') as f:
        assertEq(f.read(), content + b'\n/' + path.encode('latin-1'))
  download('path')
  download('subdir/rename', where = 'subdir', name = 'rename')
  download('subdir/rename', name = 'fingerprinted',
           fingerprint = '4d70b1b5648a8a5408cb0ec07ef38477')
  download('subdir/rename', name = 'wrong_fingerprint',
           fingerprint = '00000000000000000000000000000000',
           fail = True)
  download('binary', name = 'binary')
  download('html', name = 'html')
  assert 'binary' in beacons
  assert 'html' in beacons
