#!/usr/bin/python

import drake, drake.sched
import traceback

SCHED = drake.sched.Scheduler(1)

class Beacon(Exception):
  pass

# Sub no exceptions

beacon_main_1 = False
beacon_main_2 = False
beacon_sub_1 = False
beacon_sub_2 = False

def main():
  global beacon_main_1, beacon_main_2
  beacon_main_1 = True
  yield sub()
  drake.sched.coro_rethrow()
  beacon_main_2 = True

def sub():
  global beacon_sub_1, beacon_sub_2
  beacon_sub_1 = True
  yield
  beacon_sub_2 = True

drake.sched.Coroutine(main(), "main", SCHED)
SCHED.run()
assert beacon_main_1
assert beacon_main_2
assert beacon_sub_1
assert beacon_sub_2

# Sub exception

beacon_main_1 = False
beacon_main_2 = False
beacon_sub_1 = False
beacon_sub_2 = False

def main():
  global beacon_main_1, beacon_main_2
  try:
    beacon_main_1 = True
    yield sub()
    drake.sched.coro_rethrow()
    assert False
  finally:
    beacon_main_2 = True

def sub():
  global beacon_sub_1, beacon_sub_2
  beacon_sub_1 = True
  yield
  beacon_sub_2 = True
  raise Beacon("test.")
  yield
  assert False

drake.sched.Coroutine(main(), "main", SCHED)
try:
  SCHED.run()
except Beacon:
  pass
else:
  assert False

assert beacon_main_1
assert beacon_main_2
assert beacon_sub_1
assert beacon_sub_2


# Join no exception

beacon_main_1 = False
beacon_main_2 = False
beacon_sub_1 = False
beacon_sub_2 = False

def main():
  global beacon_main_1, beacon_main_2
  beacon_main_1 = True
  yield drake.sched.Coroutine(sub(), "sub", SCHED)
  beacon_main_2 = True

def sub():
  global beacon_sub_1, beacon_sub_2
  beacon_sub_1 = True
  yield
  beacon_sub_2 = True
  assert not beacon_main_2

drake.sched.Coroutine(main(), "main", SCHED)
SCHED.run()

assert beacon_main_1
assert beacon_main_2
assert beacon_sub_1
assert beacon_sub_2


# Join exception

beacon_main_1 = False
beacon_main_2 = False
beacon_sub_1 = False
beacon_sub_2 = False

def main():
  global beacon_main_1, beacon_main_2
  try:
    beacon_main_1 = True
    yield drake.sched.Coroutine(sub(), "sub", SCHED)
    drake.sched.coro_rethrow()
    assert False
  finally:
    beacon_main_2 = True

def sub():
  global beacon_sub_1, beacon_sub_2
  beacon_sub_1 = True
  yield
  beacon_sub_2 = True
  assert not beacon_main_2
  raise Beacon("test.")

drake.sched.Coroutine(main(), "main", SCHED)
try:
  SCHED.run()
except Beacon:
  pass
else:
  assert False

assert beacon_main_1
assert beacon_main_2
assert beacon_sub_1
assert beacon_sub_2
